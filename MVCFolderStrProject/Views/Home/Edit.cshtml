@model MVCFolderStrProjectLibrary.User

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="myForm1">
        <h4>Edit User Details</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input", id = "GenderMale", Model.Gender })
                    <label for="GenderMale" class="form-check-label">Male</label>
                </div>
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input", id = "GenderFemale", Model.Gender })
                    <label for="GenderFemale" class="form-check-label">Female</label>
                </div>
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Gender, "Other", new { @class = "form-check-input", id = "GenderOther", Model.Gender })
                    <label for="GenderOther" class="form-check-label">Other</label>
                </div>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(
          model => model.CountryId,
          new SelectList(ViewBag.CountryName1, "Value", "Text", Model.CountryId),
          "Select a Country",
          new { @class = "form-control", id = "CountryId" }
      )
        </div>
        <div>
            @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(
              model => model.StateId,
              new SelectList(ViewBag.CountryName, "Value", "Text", Model.StateId),

              "Select a State",
              new { @class = "form-control", id = "StateId" }
          )
        </div>
        <div>
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(
              model => model.CityId,
              new SelectList(ViewBag.CityName1, "Value", "Text", Model.CityName),

              "Select a City",
              new { @class = "form-control", id = "CityId" }
          )


        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary" />
                @*@Html.Action("Edit")*@
            </div>
        </div>

    </div>


    <div>
        @Html.ActionLink("Back to List", "AllData")
    </div>

}
@*@section Scripts {*@
<script>

        $(document).ready(function () {

            $('#CountryId').change(function () {
                var countryId = $(this).val();
                $('#StateId').empty().append('<option value="">Select a State</option>');
                $('#CityId').empty().append('<option value="">Select a City</option>');

                if (countryId) {
                    $.getJSON('@Url.Action("StateList", "Home")', { countryId: countryId }, function (data) {
                        $.each(data, function (index, item) {
                            $('#StateId').append('<option value="' + item.Value + '">' + item.Text + '</option>');
                        });
                    }).fail(function () {
                        alert('Failed to load states.');
                    });
                }
            });

            $('#StateId').change(function () {
                var stateId = $(this).val();
                $('#CityId').empty().append('<option value="">Select a City</option>');

                if (stateId) {
                    $.getJSON('@Url.Action("CityList", "Home")', { stateId: stateId }, function (data) {
                        $.each(data, function (index, item) {
                            $('#CityId').append('<option value="' + item.Value + '">' + item.Text + '</option>');
                        });
                    }).fail(function () {
                        alert('Failed to load cities.');
                    });
                }
            });
        });

</script>
<script>
    $(document).ready(function () {
        $('#myForm1').on('#submit', function (e) {
            Swal.fire({
                title: 'Success!',
                text: 'User Details Updated Successfully!.',
                icon: 'success',
                confirmButtonText: 'Close'
            });
        });
</script>

@*}*@
